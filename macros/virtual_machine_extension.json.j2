{#
   package: virtual_machine_extension 
   source: https://github.com/sebbrochet/azure-jinja2/blob/master/macros/virtual_machine_extension.json.j2

   macro: create
   Create a new *virtual machine extension*.

   Parameters:

      name - string
      apiVersion - string
      location - string
      fileUris - array = "", list of URIs of the files required by the extension
      PSScriptToExecute - string = "", PowerShell script to execute
      argument1 - string = "" (optional), argument to pass to the PowerShell script

Example:
(start code)

{% import 'azure-jinja2/macros/virtual_machine_extension.json.j2' as virtual_machine_extension %}
{% import 'azure-jinja2/macros/winrm_fileuris.json.j2' as winrm_fileuris %}

{% set winRMFileUris %}
  {{ winrm_fileuris.create() }}
{% endset %}

{% macro create(arg1) %}
  {{ virtual_machine_extension.create(fileUris = winRMFileUris, PSScriptToExecute='ConfigureWinRM.ps1', argument1=arg1) }}
{% endmacro %}

(end)

#}

{% macro create
(
   name                = "variables('vmName')",
   apiVersion          = "[variables('apiVersion')]",
   location            = "[variables('location')]",
   fileUris            = "[]",
   PSScriptToExecute   = "",
   argument1           = ""
)
-%}
{
   "type": "Microsoft.Compute/virtualMachines/extensions",
   "name": "[concat({{ name }},'/WinRMCustomScriptExtension')]",
   "apiVersion": "{{ apiVersion }}",
   "location": "{{ location }}",
      "dependsOn": [
         "[concat('Microsoft.Compute/virtualMachines/',{{ name }})]"
      ],
      "properties": {
         "publisher": "Microsoft.Compute",
         "type": "CustomScriptExtension",
         "typeHandlerVersion": "1.4",
         "settings": {
	 "fileUris": {{ fileUris }},
         {% if argument1 %}
	 "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file {{ PSScriptToExecute }} ',{{ argument1 }})]"
         {% else %}
	 "commandToExecute": "powershell -ExecutionPolicy Unrestricted -file {{ PSScriptToExecute }}"
         {% endif %}
         }
      }
}
{% endmacro %}
